<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>Microsoft.IdentityModel.Logging</name>
  </assembly>
  <members>
    <member name="T:Microsoft.IdentityModel.Logging.IdentityModelEventSource">
      <summary>
            Event source based logger to log different events.
            </summary>
    </member>
    <member name="P:Microsoft.IdentityModel.Logging.IdentityModelEventSource.Logger">
      <summary>
            Static logger that is exposed externally. An external application or framework can hook up a listener to this event source to log data in a custom way.
            </summary>
    </member>
    <member name="P:Microsoft.IdentityModel.Logging.IdentityModelEventSource.ShowPII">
      <summary>
            Flag which indicates whether or not PII is shown in logs. False by default.
            </summary>
    </member>
    <member name="P:Microsoft.IdentityModel.Logging.IdentityModelEventSource.HiddenPIIString">
      <summary>
            String that is used in place of any arguments to log messages if the 'ShowPII' flag is set to false.
            </summary>
    </member>
    <member name="P:Microsoft.IdentityModel.Logging.IdentityModelEventSource.HeaderWritten">
      <summary>
            Indicates whether or the log message header (contains library version, date/time, and PII debugging information) has been written.
            </summary>
    </member>
    <member name="F:Microsoft.IdentityModel.Logging.IdentityModelEventSource._versionLogMessage">
      <summary>
            The log message that indicates the current library version.
            </summary>
    </member>
    <member name="F:Microsoft.IdentityModel.Logging.IdentityModelEventSource._dateLogMessage">
      <summary>
            The log message that indicates the date.
            </summary>
    </member>
    <member name="F:Microsoft.IdentityModel.Logging.IdentityModelEventSource._piiOffLogMessage">
      <summary>
            The log message that is shown when PII is off.
            </summary>
    </member>
    <member name="F:Microsoft.IdentityModel.Logging.IdentityModelEventSource._piiOnLogMessage">
      <summary>
            The log message that is shown when PII is off.
            </summary>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteAlways(System.String)">
      <summary>
            Writes an event log by using the provided string argument and current UTC time.
            No level filtering is done on the event.
            </summary>
      <param name="message">The log message.</param>
      <remarks>No level filtering.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteAlways(System.String,System.Object[])">
      <summary>
            Writes an event log by using the provided string argument, current UTC time and the provided arguments list.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteVerbose(System.String)">
      <summary>
            Writes a verbose event log by using the provided string argument and current UTC time.
            </summary>
      <param name="message">The log message.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteVerbose(System.String,System.Object[])">
      <summary>
            Writes a verbose event log by using the provided string argument, current UTC time and the provided arguments list.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteInformation(System.String)">
      <summary>
            Writes an information event log by using the provided string argument and current UTC time.
            </summary>
      <param name="message">The log message.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteInformation(System.String,System.Object[])">
      <summary>
            Writes an information event log by using the provided string argument, current UTC time and the provided arguments list.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteWarning(System.String)">
      <summary>
            Writes a warning event log by using the provided string argument and current UTC time.
            </summary>
      <param name="message">The log message.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteWarning(System.String,System.Object[])">
      <summary>
            Writes a warning event log by using the provided string argument, current UTC time and the provided arguments list.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteError(System.String)">
      <summary>
            Writes an error event log by using the provided string argument and current UTC time.
            </summary>
      <param name="message">The log message.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteError(System.String,System.Object[])">
      <summary>
            Writes an error event log by using the provided string argument, current UTC time and the provided arguments list.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteCritical(System.String)">
      <summary>
            Writes a critical event log by using the provided string argument and current UTC time.
            </summary>
      <param name="message">The log message.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.WriteCritical(System.String,System.Object[])">
      <summary>
            Writes a critical event log by using the provided string argument, current UTC time and the provided arguments list.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.Write(System.Diagnostics.Tracing.EventLevel,System.Exception,System.String)">
      <summary>
            Writes an exception log by using the provided event identifer, exception argument, string argument and current UTC time.
            </summary>
      <param name="level">
        <see cref="T:System.Diagnostics.Tracing.EventLevel"/>
      </param>
      <param name="innerException">
        <see cref="T:System.Exception"/>
      </param>
      <param name="message">The log message.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelEventSource.Write(System.Diagnostics.Tracing.EventLevel,System.Exception,System.String,System.Object[])">
      <summary>
            Writes an exception log by using the provided event identifer, exception argument, string argument, arguments list and current UTC time.
            </summary>
      <param name="level">
        <see cref="T:System.Diagnostics.Tracing.EventLevel"/>
      </param>
      <param name="innerException">
        <see cref="T:System.Exception"/>
      </param>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="P:Microsoft.IdentityModel.Logging.IdentityModelEventSource.LogLevel">
      <summary>
            Minimum log level to log events. Default is Warning.
            </summary>
    </member>
    <member name="T:Microsoft.IdentityModel.Logging.IdentityModelTelemetryUtil">
      <summary>
            Provides a way to add and remove telemetry data.
            </summary>
    </member>
    <member name="P:Microsoft.IdentityModel.Logging.IdentityModelTelemetryUtil.ClientSku">
      <summary>
            Get the string that represents the client SKU.
            </summary>
    </member>
    <member name="P:Microsoft.IdentityModel.Logging.IdentityModelTelemetryUtil.ClientVer">
      <summary>
            Get the string that represents the client version.
            </summary>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelTelemetryUtil.AddTelemetryData(System.String,System.String)">
      <summary>
            Adds a key and its value to the collection of telemetry data.
            </summary>
      <param name="key"> The name of the telemetry.</param>
      <param name="value"> The value of the telemetry.</param>
      <returns> true if the key is successfully added; otherwise, false.</returns>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.IdentityModelTelemetryUtil.RemoveTelemetryData(System.String)">
      <summary>
            Removes a key and its value from the collection of telemetry data.
            </summary>
      <param name="key"> The name of the telemetry.</param>
      <returns> true if the key is successfully removed; otherwise, false.</returns>
    </member>
    <member name="T:Microsoft.IdentityModel.Logging.LogHelper">
      <summary>
            Helper class for logging.
            </summary>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentNullException(System.String)">
      <summary>
            Logs an exception using the event source logger and returns new <see cref="T:System.ArgumentNullException"/> exception.
            </summary>
      <param name="argument">argument that is null or empty.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.String)">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="message">message to log.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.String)">
      <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="message">message to log.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.String,System.Object[])">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.String,System.Object[])">
      <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Exception,System.String)">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="message">message to log.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.Exception,System.String)">
      <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="message">message to log.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Exception,System.String,System.Object[])">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.String,System.Exception,System.String,System.Object[])">
      <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <remarks>EventLevel is set to Error.</remarks>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Diagnostics.Tracing.EventLevel,System.String)">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="message">message to log.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.String)">
      <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="message">message to log.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Object[])">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.String,System.Object[])">
      <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Diagnostics.Tracing.EventLevel,System.Exception,System.String)">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="message">message to log.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String)">
      <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="message">message to log.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogException``1(System.Diagnostics.Tracing.EventLevel,System.Exception,System.String,System.Object[])">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogArgumentException``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String,System.Object[])">
      <summary>
            Logs an argument exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogExceptionMessage(System.Exception)">
      <summary>
            Logs an exception using the event source logger.
            </summary>
      <param name="exception">The exception to log.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogExceptionMessage(System.Diagnostics.Tracing.EventLevel,System.Exception)">
      <summary>
            Logs an exception using the event source logger.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="exception">The exception to log.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogInformation(System.String,System.Object[])">
      <summary>
            Logs an information event.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogVerbose(System.String,System.Object[])">
      <summary>
            Logs a verbose event.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogWarning(System.String,System.Object[])">
      <summary>
            Logs a warning event.
            </summary>
      <param name="message">The log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.LogExceptionImpl``1(System.Diagnostics.Tracing.EventLevel,System.String,System.Exception,System.String,System.Object[])">
      <summary>
            Logs an exception using the event source logger and returns new typed exception.
            </summary>
      <param name="eventLevel">Identifies the level of an event to be logged.</param>
      <param name="argumentName">Identifies the argument whose value generated the ArgumentException.</param>
      <param name="innerException">the inner <see cref="T:System.Exception"/> to be added to the outer exception.</param>
      <param name="format">Format string of the log message.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.FormatInvariant(System.String,System.Object[])">
      <summary>
            Formats the string using InvariantCulture
            </summary>
      <param name="format">Format string.</param>
      <param name="args">Format arguments.</param>
      <returns>Formatted string.</returns>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.LogHelper.MarkAsNonPII(System.Object)">
      <summary>
            Marks a log message argument (<paramref name="arg"/>) as NonPII.
            </summary>
      <param name="arg">A log message argument to be marked as NonPII.</param>
      <returns>An argument marked as NonPII.</returns>
      <remarks>
            Marking an argument as NonPII in <see cref="M:Microsoft.IdentityModel.Logging.LogHelper.FormatInvariant(System.String,System.Object[])"/> calls will result in logging
            that argument in cleartext, regardless of the <see cref="P:Microsoft.IdentityModel.Logging.IdentityModelEventSource.ShowPII"/> flag value.
            </remarks>
    </member>
    <member name="T:Microsoft.IdentityModel.Logging.LogMessages">
      <summary>
            Log messages and codes for Microsoft.IdentityModel.Logging
            </summary>
    </member>
    <member name="T:Microsoft.IdentityModel.Logging.NonPII">
      <summary>
            An internal structure that is used to mark an argument as NonPII.
            Arguments wrapped with a NonPII structure will be considered as NonPII in the message logging process.
            </summary>
    </member>
    <member name="P:Microsoft.IdentityModel.Logging.NonPII.Argument">
      <summary>
            Argument wrapped with a <see cref="T:Microsoft.IdentityModel.Logging.NonPII"/> structure is considered as NonPII in the message logging process.
            </summary>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.NonPII.#ctor(System.Object)">
      <summary>
            Creates an instance of <see cref="T:Microsoft.IdentityModel.Logging.NonPII"/> that wraps the <paramref name="argument"/>.
            </summary>
      <param name="argument">An argument that is considered as NonPII.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.NonPII.ToString">
      <summary>
            Returns a string that represents the <see cref="P:Microsoft.IdentityModel.Logging.NonPII.Argument"/>.
            </summary>
      <returns>
        <c>Null</c> if the <see cref="P:Microsoft.IdentityModel.Logging.NonPII.Argument"/> is <c>null</c>, otherwise calls <see cref="M:System.ValueType.ToString"/> method of the <see cref="P:Microsoft.IdentityModel.Logging.NonPII.Argument"/>.</returns>
    </member>
    <member name="T:Microsoft.IdentityModel.Logging.TextWriterEventListener">
      <summary>
            Event listener that writes logs to a file or a fileStream provided by user.
            </summary>
    </member>
    <member name="F:Microsoft.IdentityModel.Logging.TextWriterEventListener.DefaultLogFileName">
      <summary>
            Name of the default log file, excluding its path.
            </summary>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.TextWriterEventListener.#ctor">
      <summary>
            Initializes a new instance of <see cref="T:Microsoft.IdentityModel.Logging.TextWriterEventListener"/> that writes logs to text file.
            </summary>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.TextWriterEventListener.#ctor(System.String)">
      <summary>
            Initializes a new instance of <see cref="T:Microsoft.IdentityModel.Logging.TextWriterEventListener"/> that writes logs to text file.
            </summary>
      <param name="filePath">location of the file where log messages will be written.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.TextWriterEventListener.#ctor(System.IO.StreamWriter)">
      <summary>
            Initializes a new instance of <see cref="T:Microsoft.IdentityModel.Logging.TextWriterEventListener"/> that writes logs to text file.
            </summary>
      <param name="streamWriter">StreamWriter where logs will be written.</param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.TextWriterEventListener.OnEventWritten(System.Diagnostics.Tracing.EventWrittenEventArgs)">
      <summary>
            Called whenever an event has been written by an event source for which the event listener has enabled events.
            </summary>
      <param name="eventData">
        <see cref="T:System.Diagnostics.Tracing.EventWrittenEventArgs"/>
      </param>
    </member>
    <member name="M:Microsoft.IdentityModel.Logging.TextWriterEventListener.Dispose">
      <summary>
            Releases all resources used by the current instance of the <see cref="T:Microsoft.IdentityModel.Logging.TextWriterEventListener"/> class.
            </summary>
    </member>
  </members><Signature xmlns="http://www.w3.org/2000/09/xmldsig#">
	<SignedInfo xmlns="http://www.w3.org/2000/09/xmldsig#">
		<CanonicalizationMethod Algorithm="http://www.w3.org/TR/2001/REC-xml-c14n-20010315"/>
		<SignatureMethod Algorithm="http://www.w3.org/2000/09/xmldsig#rsa-sha1"/>
		<Reference URI="">
			<Transforms>
				<Transform Algorithm="http://www.w3.org/2000/09/xmldsig#enveloped-signature"/>
			</Transforms>
			<DigestMethod Algorithm="http://www.w3.org/2001/04/xmlenc#sha256"/>
			<DigestValue>ULeYzPY8e8mlFva+jteWP3iTxyKBzJPGAMrHb5XvP0U=</DigestValue>
		</Reference>
	</SignedInfo>
	<SignatureValue>
4ZWbdWaAh1j4kkKYDe9nGTv5aWvr7zcpV3DCmnXYyq0HRBsp0v3lGugpqiHEhhD6
AIq0eUAA31igfZDd33IOF1au2+DTWwQ7kBOABxYoDO/ANyUMt1OOuLeGF15loSiu
PK4b1zqqYiRSPEC5S7Uw19JaGSCqOT4oEb5Cq8QYyoJJW4qzJzZZuTd5h4xoRJsp
qwHbHrkfhVrNi8NqHWQOYP9e6eCNfCFvGZ2M/ZdCRuUyCtJvw6Kd6p5yYTQuyqq0
wMZ9+eVh9EhESxWxKJy0yl1EU4IvShr5oxoVgSjbr9F1GRnszZHNAiF5NCfZ09M+
I236k/g2jxw45MBL07AiBIUESdnZkSjm7RgFDoAllCNhRGqeHq5v5McUssHoN5wE
CfqGEXBrxR1ohtGP75TS0Qrk3s364aRtBOOpTVWA7Bap7RSU1wTuQrH8Pe+K4KqF
KrF/yMWbgL3ciLDhGYCWmeE1ZmteI83QGiAzV5ryXXQawZUUS0yATYpWdm5cRtKb
tAJfC6/yu3OpfzWA98GfYidr6ZoiRkg9aUnZd21o3Cz9RGKDrZU/nbAOVOhrqjsm
ewsGamxFo/72Tl0huiMgml6jDN1dkzyI8kdy/eu8U8NipDMfogY+Uu4Uz5poabSo
0aDIBuzGkTF8b3zbQopOylS2jet2BA7oRdsnJmjoDSg=
	</SignatureValue>
	<KeyInfo>
		<KeyValue>
			<RSAKeyValue>
				<Modulus>
6mNHkyVOWMu3d3aLvrgGjbMo7WjCOv8MPSIkAHbhUaBS0+kEZHWL0YQKos+ZuRNr
ldErfZgZgBG0fMCxUPVHibavS0bjvke4P5Gh7XqMJ34ROdq2uLTLuFghhVbQUrea
aQHpr3HifnXrRUn3+HjkYM/VRh8WmXjkMnLlGtq//44Qeay2zkWS+ZPmJQP4L9lY
1TNd8j0Y7dqcAqM0EY7pip07cZB9cy1kmi2LSluvjBT5oU9u4fCrbQmc2/iZYYix
eR3Ma/YiIvqbQy9zNlv7+2c7F0HwJ6E5MDxIBZEmLiPk4XyWEeU+I0Kg7XBXDUFE
y7C2YpR5vxia0r4WRcXSI9LzG2Xkmj99ypuWwkMMKZmKzyKBiMeBhV2pwKdWtz53
20WNTP24rFdY+XsiLqFCIH2xDvKTRCuSMd8WRtU2m5/IVAXieTV1PvD7N5cau7Ji
CFd4srSO2D9LuCrlZekU86bzTi9+mB1pdvC/aFeRGULQRqF0XGk6DrQJzQYlUSJu
UBel/bLlAxb+0u1fNQ7Nbdi/2cnxusTgOH+BOa5n0ZHoL/WqPlmUSEsnOuBHGAKh
X15+jgQWNXsaG7sqxWPZZkBkUeFgp+RgR4eEAxFGOMVsU8K0X4Jch9hqwqlodDq8
kzs4DFxkZvyld+0yeVf95lr6UPrQM29+TD5QDWB6HAk=
				</Modulus>
				<Exponent>AQAB</Exponent>
			</RSAKeyValue>
		</KeyValue>
		<X509Data>
			<X509IssuerSerial>
				<X509IssuerName>CN=DigiCert Trusted G4 Code Signing RSA4096 SHA384 2021 CA1, O=DigiCert\, Inc., C=US</X509IssuerName>
				<X509SerialNumber>5473021574676036775556483212753251580</X509SerialNumber>
			</X509IssuerSerial>
			<X509SubjectName>CN=Lenovo, OU=G08, O=Lenovo, L=Morrisville, ST=North Carolina, C=US</X509SubjectName>
			<X509Certificate>
MIIHZzCCBU+gAwIBAgIQBB4QzA8gdc+ERhFKPdws/DANBgkqhkiG9w0BAQsFADBp
MQswCQYDVQQGEwJVUzEXMBUGA1UEChMORGlnaUNlcnQsIEluYy4xQTA/BgNVBAMT
OERpZ2lDZXJ0IFRydXN0ZWQgRzQgQ29kZSBTaWduaW5nIFJTQTQwOTYgU0hBMzg0
IDIwMjEgQ0ExMB4XDTIxMDkxMzAwMDAwMFoXDTIyMDkxMzIzNTk1OVowbDELMAkG
A1UEBhMCVVMxFzAVBgNVBAgTDk5vcnRoIENhcm9saW5hMRQwEgYDVQQHEwtNb3Jy
aXN2aWxsZTEPMA0GA1UEChMGTGVub3ZvMQwwCgYDVQQLEwNHMDgxDzANBgNVBAMT
Bkxlbm92bzCCAiIwDQYJKoZIhvcNAQEBBQADggIPADCCAgoCggIBAOpjR5MlTljL
t3d2i764Bo2zKO1owjr/DD0iJAB24VGgUtPpBGR1i9GECqLPmbkTa5XRK32YGYAR
tHzAsVD1R4m2r0tG475HuD+Roe16jCd+ETnatri0y7hYIYVW0FK3mmkB6a9x4n51
60VJ9/h45GDP1UYfFpl45DJy5Rrav/+OEHmsts5FkvmT5iUD+C/ZWNUzXfI9GO3a
nAKjNBGO6YqdO3GQfXMtZJoti0pbr4wU+aFPbuHwq20JnNv4mWGIsXkdzGv2IiL6
m0MvczZb+/tnOxdB8CehOTA8SAWRJi4j5OF8lhHlPiNCoO1wVw1BRMuwtmKUeb8Y
mtK+FkXF0iPS8xtl5Jo/fcqblsJDDCmZis8igYjHgYVdqcCnVrc+d9tFjUz9uKxX
WPl7Ii6hQiB9sQ7yk0QrkjHfFkbVNpufyFQF4nk1dT7w+zeXGruyYghXeLK0jtg/
S7gq5WXpFPOm804vfpgdaXbwv2hXkRlC0EahdFxpOg60Cc0GJVEiblAXpf2y5QMW
/tLtXzUOzW3Yv9nJ8brE4Dh/gTmuZ9GR6C/1qj5ZlEhLJzrgRxgCoV9efo4EFjV7
Ghu7KsVj2WZAZFHhYKfkYEeHhAMRRjjFbFPCtF+CXIfYasKpaHQ6vJM7OAxcZGb8
pXftMnlX/eZa+lD60DNvfkw+UA1gehwJAgMBAAGjggIGMIICAjAfBgNVHSMEGDAW
gBRoN+Drtjv4XxGG+/5hewiIZfROQjAdBgNVHQ4EFgQUIajcW9OOJkOr5gI9MJZF
CuFd0GMwDgYDVR0PAQH/BAQDAgeAMBMGA1UdJQQMMAoGCCsGAQUFBwMDMIG1BgNV
HR8Ega0wgaowU6BRoE+GTWh0dHA6Ly9jcmwzLmRpZ2ljZXJ0LmNvbS9EaWdpQ2Vy
dFRydXN0ZWRHNENvZGVTaWduaW5nUlNBNDA5NlNIQTM4NDIwMjFDQTEuY3JsMFOg
UaBPhk1odHRwOi8vY3JsNC5kaWdpY2VydC5jb20vRGlnaUNlcnRUcnVzdGVkRzRD
b2RlU2lnbmluZ1JTQTQwOTZTSEEzODQyMDIxQ0ExLmNybDA+BgNVHSAENzA1MDMG
BmeBDAEEATApMCcGCCsGAQUFBwIBFhtodHRwOi8vd3d3LmRpZ2ljZXJ0LmNvbS9D
UFMwgZQGCCsGAQUFBwEBBIGHMIGEMCQGCCsGAQUFBzABhhhodHRwOi8vb2NzcC5k
aWdpY2VydC5jb20wXAYIKwYBBQUHMAKGUGh0dHA6Ly9jYWNlcnRzLmRpZ2ljZXJ0
LmNvbS9EaWdpQ2VydFRydXN0ZWRHNENvZGVTaWduaW5nUlNBNDA5NlNIQTM4NDIw
MjFDQTEuY3J0MAwGA1UdEwEB/wQCMAAwDQYJKoZIhvcNAQELBQADggIBABVRqdHp
y2FFChQpODeMywx+URlAp4clj1XDg+6Aw1cG4fIqRd/MYD6eHgbWTNOikxZbuaPK
D2slOZW713EMTsfavQFKi85c7ShYd1ZFeFG957lmyaVKF2h9J7ODphdeqrbvX6gB
qeXeSWkBQjdJ+ACUQUFMxP01WYHNfwlhyN7cgwCar5+L3ZYrCyWL+vj47h/b9qXF
Efc8kJBuvEIP9F8f2zSbHwEB+4fh3d72v2znpL/0+Sh/fBHtnGrfWPD/ZaSjXQSx
SBKC4wY5hw3EmcVR+Y+LCtxWpVlWWAr5uaAXxPudZFmaahqqrvYdYYJr1gLQmQKB
b9+5PdFSvq6DHwGVbqjm0dsNJ47EVHo/ZFRX/vHXAH1FAUmC+HWJ2F0WP6dOpTd5
coTkH0q3isjbBXSwmwPgAdOehZr++T27mE1w7a23JBp2DTySaxD4nEcofDbwYQNI
YHkL7ob0TBLQKmMQzt6g/TumKhrz3lucR9Xrong43giq6GrcWANj2iuSk2R1myGy
R6pOiZPdBI99VwipTz4eFG4Njw51lEZ8U3A12u5mxW05JqU1naW7MgBkqJKhbOya
bcWKgiK2NS+wAn3MeolUiz0yNI71nTRFuDgQIcib5ytN/Leu8945OdycG/PY34Uk
IK6lw+cfHY5IWN3wi4OZ33ExlAAcCzKxESz9
			</X509Certificate>
		</X509Data>
	</KeyInfo>
	<Object>
		<SignatureProperties>
			<SignatureProperty Target="#"><issuerCertificate xmlns="namespaceURI">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</issuerCertificate>
			</SignatureProperty>
		</SignatureProperties>
	</Object>
</Signature>
</doc>